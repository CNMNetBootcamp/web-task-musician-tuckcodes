// <auto-generated />
using System;
using App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.Migrations
{
    [DbContext(typeof(StudioContext))]
    [Migration("20190211035259_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("PostalCode")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("StreetName")
                        .IsRequired();

                    b.Property<int>("StreetNumber");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("App.Models.Album", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProducerID");

                    b.HasKey("ID");

                    b.HasIndex("ProducerID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("App.Models.Musician", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("SSN");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Musician");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Musician");
                });

            modelBuilder.Entity("App.Models.Performance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Instrument");

                    b.Property<int>("MusicianID");

                    b.Property<int>("SongID");

                    b.HasKey("ID");

                    b.HasIndex("MusicianID");

                    b.HasIndex("SongID");

                    b.ToTable("Performance");
                });

            modelBuilder.Entity("App.Models.Song", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AlbumID");

                    b.Property<int>("Key");

                    b.HasKey("ID");

                    b.HasIndex("AlbumID");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("App.Models.Producer", b =>
                {
                    b.HasBaseType("App.Models.Musician");

                    b.ToTable("Producer");

                    b.HasDiscriminator().HasValue("Producer");
                });

            modelBuilder.Entity("App.Models.Album", b =>
                {
                    b.HasOne("App.Models.Producer", "Producer")
                        .WithMany("Productions")
                        .HasForeignKey("ProducerID");
                });

            modelBuilder.Entity("App.Models.Musician", b =>
                {
                    b.HasOne("App.Models.Address", "Address")
                        .WithMany("Musicians")
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("App.Models.Performance", b =>
                {
                    b.HasOne("App.Models.Musician", "Musician")
                        .WithMany("Performances")
                        .HasForeignKey("MusicianID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App.Models.Song", "Song")
                        .WithMany("Performers")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App.Models.Song", b =>
                {
                    b.HasOne("App.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumID");
                });
#pragma warning restore 612, 618
        }
    }
}
